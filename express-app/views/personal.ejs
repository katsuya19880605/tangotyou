<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SoraSora</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheets/personal.css">
</head>

<body>
    <header>
        <div class="hero">
            <div class="container">
                <nav class="navbar navbar-expand-lg navbar-dark px-0">

                    <a class="navbar-brand" href="#"></a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse"
                        data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="personal">Top</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/edit">Edit</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/">Logout</a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div>
        </div>
    </header>

    <div class="container">

        <div class="mt-3">
            <p>読み込むファイル：
                <select id="target" class="cp_ipselect cp_sl04" onchange="chage_csv()">
                    <% for(let i in file){ %>
                    <option value="<%= file[i]%>"><%= fileName[i]%></option>
                    <%}%>
                </select>
            
            </p>
        </div>
        
        <div class="mt-3">
            出題数：
            <input type="radio" name="r" id="r1" value="0" onchange="select_radio()"><label for="r1">10問</label>
            <input type="radio" name="r" id="r2" value="1" class="ml-2" onchange="select_radio()"><label
                for="r2">30問</label>
            <input type="radio" name="r" id="r3" value="2" class="ml-2"  onchange="select_radio()"><label
           
                for="r3">全問</label>
        </div>

        <div id="card" class="py-3 px-0">
            <p id="cnt" class="text-right">　</p>
            <div id="disparea" class="px-0 disparea dispareahight">
                -- START --
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3 offset-sm-2 order-sm-1 order-2 mb-3">
                <button type="button" disabled id="back" name="back"
                    class="btn btn-lg font-weight-bold btn-color w-100 mt-4 mt-sm-0" onclick="back()">BACK</button>
            </div>
            <div class="col-sm-3 offset-sm-2 order-sm-2 order-1">
                <button type="button" id="start" class="btn btn-lg font-weight-bold btn-color w-100"
                    onclick="changeText()">NEXT</button>
            </div>
            <form name="restart"></form>
        </div>
    </div>

    <!-- 追加 -->
    <form method="POST" name="post">
       
        <input id="fname_cnt" type="hidden" name="fname_cnt" value="">
        <input id="now_cnt" type="hidden" name="now_cnt" value="">
        <input id="quantity" type="hidden" name="quantity" value="">
        <input id="S_Data" type="hidden" name="S_Data" value="">
        <input id="O_Data" type="hidden" name="O_Data" value="">
    </form>

   

    <!-- personal.jsからデータを受け取って変数に渡す -->
    
    <script>fname_cnt = "<%= fname_cnt %>";</script>
    <script>now_cnt = "<%= cnt_data %>";</script>
    <script>now_quantity = "<%= quantity %>";</script>
    <script>at_data = "<%= at_data %>";</script>
   
    

       
    <footer>
      
    </footer>
</body>
<script>



    'use strict';
    //*****************************************************************
    // 宣言エリア
    //*****************************************************************
    let array = [];
    let Sct_Array=[]; //追加
    let cnt = 0;
    let flg = 1;
    let quantity = 0;
    let reset_flg = false;
    //追加
    let allDataArray = [];
    let fileInput = document.getElementById("01");
    let elements;
    let disabled_release = document.getElementById("back");
    let disparea = document.getElementById("disparea");
    let pDiv1;
    let pDiv2;
    let pDiv3;
    let pDiv4;
    let pDiv5;
    let pcnt = document.getElementById("cnt");
    let start = document.getElementById("start");
    let fileReader = new FileReader();
    // 追加
    let fileElement = document.getElementById("target");
    // 全てのoption要素を取得
    let fileElements = fileElement.options;

    let sts_flg=1; //追加


    
    //ファイル番号引継ぎ
    if(fname_cnt!=''){
        fileElement = document.getElementById("target");
        fileElements = fileElement.options;
        fileElement.options[fname_cnt].selected = true;
    };
  

    getCSV();

    //問題数ラジオ設定
    if(now_quantity==''){
        elements = document.getElementsByName("r");
        elements[2].checked = true ;
    }else{
        elements = document.getElementsByName("r");
        if(now_quantity==10){
            elements[0].checked = true ;
        }else if(now_quantity==30){
            elements[1].checked = true ;
        }else{
            elements[2].checked = true ;
        };
    };



    //*****************************************************************
    //読み込むファイルを選択したらcsv読み込み
    //*****************************************************************
    function chage_csv(){
        fileElement = document.getElementById("target");
        fileElements = fileElement.options;
        getCSV();
        select_radio();
        elements[2].checked = true;
    }

    //*****************************************************************
    //CSVファイル読み込み
    //*****************************************************************
    function getCSV() {
        if(at_data ==''){

          let csvFile = "";
            for (var i = 0, l = fileElements.length; l > i; i++) {
                if (fileElements[i].selected) {
                    csvFile = fileElements[i].value
                    fname_cnt=i; //ファイル番号を取得
                }
            };
            let req = new XMLHttpRequest(); // HTTPでファイルを読み込むためのXMLHttpRrequestオブジェクトを生成
            req.open("get", "csv/" + csvFile, true); // アクセスするファイルを指定   
            req.send(null); // HTTPリクエストの発行
            // レスポンスが返ってきたらconvertCSVtoArray()を呼ぶ	
            req.onload = function () {
                convertCSVtoArray(req.responseText); // 渡されるのは読み込んだCSVデータ
                shufle(array);
            }
            cnt=0;
        //ステータス変更後、戻りデータがある場合
        }else{
            
            let csvFile = "";
            for (var i = 0, l = fileElements.length; l > i; i++) {
                if (fileElements[i].selected) {
                    csvFile = fileElements[i].value
                    fname_cnt=i; //ファイル番号を取得
                }
            };
            let req = new XMLHttpRequest(); // HTTPでファイルを読み込むためのXMLHttpRrequestオブジェクトを生成
            req.open("get", "csv/" + csvFile, true); // アクセスするファイルを指定   
            req.send(null); // HTTPリクエストの発行
            // レスポンスが返ってきたらconvertCSVtoArray()を呼ぶ	
            req.onload = function () {

                BacktoArray(req.responseText, at_data, now_cnt); 
                changeText();
                at_data ='';
                
            }
        }
    }

   
    //*****************************************************************
    // convertCSVtoArray() 読み込んだCSVデータを二次元配列に変換する関数 
    //*****************************************************************
    //* 読み込んだCSVデータが文字列として渡される
    function convertCSVtoArray(str) {
        let tmp = str.split("\n");
        allDataArray = [];
        array = [];

        for (let i = 0; i < tmp.length; ++i) {
            allDataArray[i] = tmp[i].split(',');
            tmp[i] = tmp[i].replace(/\r/g, '');
            array[i] = tmp[i].split(',');
            array[i].push(i+"\n");
        }
        
        for (let i = 0; i < array.length; ++i) {
            if(array[i][4] == 0){
                array.splice(i,1)
                --i;
            }     
        } 
     
        quantity = array.length;
        pcnt.innerText = 0 + '問目／' + quantity + '問';

    }

    //*****************************************************************
    // BacktoArray() 読み込んだCSVデータを二次元配列に変換する関数 
    //*****************************************************************
    //* 読み込んだCSVデータが文字列として渡される
    function BacktoArray(str, at_data, now_cnt) {
        let tmp = str.split("\n");
        let at_data2 = at_data.split("\n");
        at_data2.pop() ; //最後の空白行を消去
        

        allDataArray = [];
        for (let i = 0; i < tmp.length; ++i) {
            allDataArray[i] = tmp[i].split(',');
        }

        array = []; //上書き
        for (let i = 0; i < at_data2.length; ++i) {
            array[i] = at_data2[i].split(',');
            array[i][5] = array[i][5]+"\r";
        }

        cnt=Number(now_cnt)+1;

        elements = document.getElementsByName("r");
        for (var i = elements.length; i--;) {
            if (elements[i].checked) {
                switch (elements[i].value) {
                    case "0":
                        quantity = 10;
                        break;
                    case "1":
                        quantity = 30;
                        break;
                    case "2":
                        quantity = array.length;
                        break;
                }
            }
        }

        pcnt.innerText = cnt+1 + '問目／' + quantity + '問';
        sts_flg=0;
        
    }

    //*****************************************************************
    // shufle(ary) 配列のランダムソート 
    //*****************************************************************
    function shufle(array) {
        for (var i = array.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var tmp = array[i];
            array[i] = array[j];
            array[j] = tmp;
        }
    }

    

    //*****************************************************************
    // select_radio() 選択した問題数を反映
    //*****************************************************************
    function select_radio() {
        elements = document.getElementsByName("r");
        for (var i = elements.length; i--;) {
            if (elements[i].checked) {
                switch (elements[i].value) {
                    case "0":
                        quantity = 10;
                        break;
                    case "1":
                        quantity = 30;
                        break;
                    case "2":
                        quantity = array.length;
                        break;
                }
            }
        }
        disparea.textContent = '-- START --';
        disabled_release.disabled = true;      //backボタンの無効化
        disparea.classList.add('disparea');
        shufle(array);
        cnt = 0;    //ラジオボタン選択時にカウントを初期化する
        pcnt.innerText = cnt + '問目／' + quantity + '問';
        flg = 1;
    }

    //*****************************************************************
    // back() ひとつ前の略語表示に戻る
    //*****************************************************************
    function back() {
        cnt--;
        if (cnt < 0) {
            cnt = 0
        }
        flg = 0;
        disparea.textContent = array[cnt][flg];
        disparea.classList.add('disparea');
        pcnt.innerText = cnt + 1 + '問目／' + quantity + '問';
        disparea.classList.add('disparea');
        start.classList.remove('btn-color2');
        start.classList.add('btn-color');
        start.innerHTML = 'NEXT';
        reset_flg = false;
        flg = 0;
    };

    //*****************************************************************
    // changeText() ボタンを押されたら表示を変える関数 
    //*****************************************************************
    function changeText() {
       
        /*終了時の処理 問題が最後まで終わったら最初から繰り返す*/
        if (reset_flg) {
            let answer = confirm('You もう1回やっちゃいなよ ( ´⊿`)y-~~');
            if (answer) {
                disparea.textContent = '-- START --';
                disabled_release.disabled = true;      //backボタンの無効化
                disparea.classList.add('disparea');
                shufle(array);
                cnt = 0;    //ラジオボタン選択時にカウントを初期化する
                now_cnt = 0;    //ラジオボタン選択時にカウントを初期化する
                start.classList.remove('btn-color2');
                start.classList.add('btn-color');
                pcnt.innerText = cnt + '問目／' + quantity + '問';
                start.innerHTML = 'NEXT';
                reset_flg = false;
            } else {
                disparea.classList.add('disparea');
                reset_flg = true;
            }
            return;
        }

        if ((flg == 1 && cnt == quantity) || (flg == 1 && cnt == array.length)) {
            disparea.textContent = '-- END --';
            disparea.classList.add('disparea');
            start.classList.remove('btn-color');
            start.classList.add('btn-color2');
            pcnt.innerText = cnt + '問目／' + quantity + '問';
            start.innerHTML = 'Re:START';
            reset_flg = true;
            return;
        }
        /*終了時の処理　ここまで*/


        flg = flg ^ 1;  //フラグのスイッチXOR
        if (flg == 0) {


    //////覚えたチェックが入っている状態でnextボタンを押した時///////////
            
            if(cnt>0 && sts_flg==1 && array[cnt-1][flg + 4]=='1'){
                let sts = document.getElementById("sts");
                if(sts.checked){
                    //変更するナンバを取得
                    let edit_cnt=Number(array[cnt-1][flg + 5]);
                    let now_cnt=cnt-1;
                    array[cnt-1][flg + 4]='0';
                    allDataArray[edit_cnt][4]='0\n';

                    let Sct_Data ="";
                    array.forEach(function(rowvals) {
                        let array_row = rowvals.join(",");
                        Sct_Data += array_row;
                    });


                    let Org_Data ="";
                    allDataArray.forEach(function(rowvals) {
                        let row = rowvals.join(",");
                        Org_Data += row;
                    });
                
                   

                    document.getElementById("fname_cnt").value=fname_cnt;
                    document.getElementById("now_cnt").value=now_cnt;
                    document.getElementById("quantity").value=quantity;
                    document.getElementById("S_Data").value=Sct_Data;
                    document.getElementById("O_Data").value=Org_Data;
                   
                    document.post.submit();
                };
            };

            disparea.textContent = array[cnt][flg];
            disparea.classList.add('disparea');
            pcnt.innerText = cnt + 1 + '問目／' + quantity + '問';
        } else {

           
            disparea.innerHTML = '<div class="py-3"><h2 id="textdiv_1" class="text-center">　</h2><p class="border-bottom text-center"><span id="textdiv_2">　</span></p><p class="border-bottom text-center"><span id="textdiv_3">　</span></p><p class="border-bottom text-center"><span id="textdiv_4">　</span></p></div><div id="textdiv_5" class="check"></div>';
            
                
            disparea.classList.remove('disparea');

            pDiv1 = document.getElementById("textdiv_1");
            pDiv2 = document.getElementById("textdiv_2");
            pDiv3 = document.getElementById("textdiv_3");
            pDiv4 = document.getElementById("textdiv_4");
            pDiv5 = document.getElementById("textdiv_5");

            pDiv1.innerHTML = array[cnt][flg - 1];
            pDiv2.innerHTML = array[cnt][flg];
            pDiv3.innerHTML = array[cnt][flg + 1];
            pDiv4.innerHTML = array[cnt][flg + 2];
            pDiv5.innerHTML = "<input type='checkbox' id='sts' value='1'>覚えた";

            if(array[cnt][flg + 3]==0){
                document.getElementById("sts").checked = true;
                $('#sts').prop('disabled', true);//チェックボックス無効化
            };
            
        
            cnt++;
            sts_flg=1;
        }
        disabled_release.disabled = false;      //backボタンの有効化
    };



    
   
     

</script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
    integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
    crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
    crossorigin="anonymous"></script>

</html>